package fr.adneom.question1;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

class App
{
	// Generic function to split a list in Java 8 and above
	public static<T> List[] split(List<T> list)
	{
		int[] index = {0, (list.size() + 1)/2, list.size()};

		List<List<T>> lists = IntStream.rangeClosed(0, 1)
									.mapToObj(i -> list.subList(index[i], index[i + 1]))
									.collect(Collectors.toList());

		// return an array containing both lists
		return new List[] {lists.get(0), lists.get(1)};
	}
	private static <String> List<List<String>> nPartition(List<String> objs, final int N) {
	    return new ArrayList<>(IntStream.range(0, objs.size()).boxed().collect(
	            Collectors.groupingBy(e->e/N,Collectors.mapping(e->objs.get(e), Collectors.toList())
	                    )).values());
	    }
	// Program to split a list in Java
	public static void main(String[] args)
	{
		List<String> list = Arrays.asList("A", "B", "C", "D", "E");

		// split list into two
		List[] lists = split(list);

		// Retourner une collection de n sous listes 
		List<List<String>> nPartition(list,3);
		System.out.println(lists[0]);
		System.out.println(lists[1]);
	}
}
